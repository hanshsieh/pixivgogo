// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// URLValuesEncoder is a mock of urlValuesEncoder interface
type URLValuesEncoder struct {
	ctrl     *gomock.Controller
	recorder *URLValuesEncoderMockRecorder
}

// URLValuesEncoderMockRecorder is the mock recorder for URLValuesEncoder
type URLValuesEncoderMockRecorder struct {
	mock *URLValuesEncoder
}

// NewURLValuesEncoder creates a new mock instance
func NewURLValuesEncoder(ctrl *gomock.Controller) *URLValuesEncoder {
	mock := &URLValuesEncoder{ctrl: ctrl}
	mock.recorder = &URLValuesEncoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *URLValuesEncoder) EXPECT() *URLValuesEncoderMockRecorder {
	return m.recorder
}

// Encode mocks base method
func (m *URLValuesEncoder) Encode(src interface{}, dst map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Encode", src, dst)
	ret0, _ := ret[0].(error)
	return ret0
}

// Encode indicates an expected call of Encode
func (mr *URLValuesEncoderMockRecorder) Encode(src, dst interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Encode", reflect.TypeOf((*URLValuesEncoder)(nil).Encode), src, dst)
}

// URLValuesDecoder is a mock of urlValuesDecoder interface
type URLValuesDecoder struct {
	ctrl     *gomock.Controller
	recorder *URLValuesDecoderMockRecorder
}

// URLValuesDecoderMockRecorder is the mock recorder for URLValuesDecoder
type URLValuesDecoderMockRecorder struct {
	mock *URLValuesDecoder
}

// NewURLValuesDecoder creates a new mock instance
func NewURLValuesDecoder(ctrl *gomock.Controller) *URLValuesDecoder {
	mock := &URLValuesDecoder{ctrl: ctrl}
	mock.recorder = &URLValuesDecoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *URLValuesDecoder) EXPECT() *URLValuesDecoderMockRecorder {
	return m.recorder
}

// Decode mocks base method
func (m *URLValuesDecoder) Decode(dst interface{}, src map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decode", dst, src)
	ret0, _ := ret[0].(error)
	return ret0
}

// Decode indicates an expected call of Decode
func (mr *URLValuesDecoderMockRecorder) Decode(dst, src interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decode", reflect.TypeOf((*URLValuesDecoder)(nil).Decode), dst, src)
}
